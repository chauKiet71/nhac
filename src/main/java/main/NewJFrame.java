/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.ImageIcon;
import model.Model_Chill;

/**
 *
 * @author kle99
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        listChill1.addItem(new Model_Chill(new ImageIcon(getClass().getResource("/icon/BaiHat/b1.jpg")), "Bleed"));
        this.lbStop.setVisible(false);
        init();
    }
    Clip clip;
    long pausedPosition;
    List<String> list;
    int currentSongIndex;

    void init() {
        list = new ArrayList<>();
        list.add("D://loinho.wav");
        list.add("D://aloi.wav");
        list.add("D://id-072019.wav");
        currentSongIndex = 0;
    }

    void play() {
        try {
            String path = list.get(currentSongIndex);
            AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File(path).getAbsoluteFile());
            clip = AudioSystem.getClip();
            clip.open(audioInputStream);
            clip.start();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    void forward() {
        if (currentSongIndex < list.size() - 1) {
            stop();
            currentSongIndex++;
            play();
        }
    }

    void back() {
        if (currentSongIndex > 0) {
            stop();
            currentSongIndex--;
            play();
        }
    }

    void stop() {
        if (clip != null && clip.isRunning()) {
            pausedPosition = clip.getMicrosecondPosition();
            clip.stop();
        }
    }

    void resume() {
        if (clip != null && !clip.isRunning()) {
            clip.setMicrosecondPosition(pausedPosition);
            clip.start();
        }
    }
//    void init() {
//        list = new ArrayList<>();
//        list.add("D://loinho.wav");
//        list.add("D://aloi.wav");
//        list.add("D://id-072019.wav");
//    }
//
//    void play() {
//        try {
//            String path = list.get(currentSongIndex);
//            AudioInputStream aut = AudioSystem.getAudioInputStream(new File(path).getAbsoluteFile());
//            clip = AudioSystem.getClip();
//            clip.open();
//            clip.start();
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//    }
//
//    public void pause() {
//        if (clip != null && !clip.isRunning()) {
//            clip.setMicrosecondPosition(pausedPosition);
//            clip.start();
//        }
//    }
//
//    public void stop() {
//        if (clip != null && clip.isRunning()) {
//            pausedPosition = clip.getMicrosecondPosition();
//            clip.stop();
//        }
//    }
//
//    private void forward() {
//        if (clip != null && clip.isRunning()) {
//            stop();
//            currentSongIndex++;
//            if (currentSongIndex >= list.size()) {
//                currentSongIndex = 0;
//            }
//            play();
//        }
//    }
//
//    private void back() {
//        if (clip != null && clip.isRunning()) {
//            stop();
//            currentSongIndex--;
//            if (currentSongIndex < 0) {
//                currentSongIndex = list.size() - 1;
//            }
//            play();
//        }
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        listChill1 = new component2.ListChill<>();
        jLabel1 = new javax.swing.JLabel();
        lbPlay = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lbStop = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        listChill1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listChill1MouseClicked(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(30, 30, 30));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/back.png"))); // NOI18N
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.setOpaque(true);
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel1MouseReleased(evt);
            }
        });

        lbPlay.setBackground(new java.awt.Color(30, 30, 30));
        lbPlay.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbPlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/playing.png"))); // NOI18N
        lbPlay.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbPlay.setOpaque(true);
        lbPlay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbPlayMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbPlayMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lbPlayMouseReleased(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(30, 30, 30));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/next.png"))); // NOI18N
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.setOpaque(true);
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel3MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel3MouseReleased(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(30, 30, 30));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/play.png"))); // NOI18N
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.setOpaque(true);

        lbStop.setBackground(new java.awt.Color(30, 30, 30));
        lbStop.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbStop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/stop.png"))); // NOI18N
        lbStop.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbStop.setOpaque(true);
        lbStop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbStopMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbStopMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lbStopMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(lbStop, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(listChill1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbStop, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(listChill1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listChill1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listChill1MouseClicked
        lbPlay.setVisible(false);
        lbStop.setVisible(true);
//        String path = "D://loinho.wav";
//        try {
//            // Mở và phát file âm thanh (ở đây tôi sử dụng một file test.wav)
//            AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File(path).getAbsoluteFile());
//            clip = AudioSystem.getClip();
//            clip.open(audioInputStream);
//            clip.start();
//            System.out.println("" + currentSongIndex + "   ");
//        } catch (Exception ex) {
//            ex.printStackTrace();
//        }
        play();
    }//GEN-LAST:event_listChill1MouseClicked

    private void lbPlayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbPlayMouseClicked

    }//GEN-LAST:event_lbPlayMouseClicked

    private void lbPlayMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbPlayMousePressed
        lbPlay.setVisible(false);
        lbStop.setVisible(true);
    }//GEN-LAST:event_lbPlayMousePressed

    private void lbStopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbStopMouseClicked

    }//GEN-LAST:event_lbStopMouseClicked

    private void lbStopMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbStopMousePressed
        lbPlay.setVisible(true);
        lbStop.setVisible(false);
    }//GEN-LAST:event_lbStopMousePressed

    private void lbPlayMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbPlayMouseReleased
        resume();
    }//GEN-LAST:event_lbPlayMouseReleased

    private void lbStopMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbStopMouseReleased
        stop();
    }//GEN-LAST:event_lbStopMouseReleased

    private void jLabel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel3MousePressed

    private void jLabel3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseReleased
        forward();
    }//GEN-LAST:event_jLabel3MouseReleased

    private void jLabel1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseReleased
        back();
    }//GEN-LAST:event_jLabel1MouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lbPlay;
    private javax.swing.JLabel lbStop;
    private component2.ListChill<String> listChill1;
    // End of variables declaration//GEN-END:variables
}
